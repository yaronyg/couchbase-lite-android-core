buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }
}
apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

dependencies {
    // this library is only needed by test code (95% certain), and therefore
    // instrumentTestCompile is used rather than compile.
    //instrumentTestCompile 'commons-io:commons-io:2.0.1'

    // as discovered by trial and error, the build will fail if "compile" is
    // used: Error: duplicate files during packaging of APK.  I guess it is
    // being implicitly included by being in the libs folder, and then "double included"
    // because of a "compile" directive to explicitly include the jar.
    //instrumentTestCompile fileTree(dir: 'libs', include: 'td_collator_so.jar')

    compile 'org.codehaus.jackson:jackson-core-asl:1.9.2'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.2'
    compile 'org.apache.httpcomponents:httpclient:4.3.1'


}

task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("UPLOAD_USERNAME") + ":" + System.getenv("UPLOAD_PASSWORD")
        mkcolPath = System.getenv("UPLOAD_MAVEN_REPO_URL") + "com/couchbase/cblite/CBLite/" + System.getenv("UPLOAD_VERSION_CBLITE") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("UPLOAD_MAVEN_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("UPLOAD_MAVEN_REPO_URL")) {
                authentication(userName: System.getenv("UPLOAD_USERNAME"), password: System.getenv("UPLOAD_PASSWORD"))
            }
            pom.version = System.getenv("UPLOAD_VERSION_CBLITE")
            pom.groupId = 'com.couchbase.cblite'
            pom.artifactId = 'CBLite'
            pom.project {
                licenses {
                    license {
                        name 'Couchbase Community Edition License Agreement'
                        url 'http://www.couchbase.com/agreement/community'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task generateJavadocs(type: Javadoc) {
    source = sourceSets.main.java.srcDirs
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.8'
}